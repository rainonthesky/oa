<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper   
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace = "com.oa.sys.mapper.UserMapper">
	<sql id="all_user_columns">
		USER_ID,DEPT_ID,LOGIN_NAME,PASSWORD,
	  		USER_NO,USER_NAME,EMAIL,PHONE,MOBILE,
	  		UPDATE_BY,UPDATE_DATE,REMARKS
	</sql>
	<sql id="query_user_sql_where">
		<if test="userName!=null">
			AND  USER_NAME LIKE '%${userName}%'
		</if>
		<if test="loginName!=null">
			AND LOGIN_NAME =#{loginName}
		</if>
		<if test="password!=null">
			AND PASSWORD =#{password}
		</if>
	</sql>
	<!--根据条件查询用户列表-->
	 <select id="getUserList" parameterType="user" resultType="user">
		 SELECT
		 	<include refid="all_user_columns"></include>
		 FROM PM_SYS_USER
		 <where>
			 <include refid="query_user_sql_where"></include>
		 </where>
	 </select>

	<!--根据角色的id查询区域对应的关系-->
	<select id="getUserRoleByUserId" parameterType="long" resultType="userToRole">
		SELECT USER_ID ,ROLE_ID
 		FROM PM_SYS_USER_ROLE
		WHERE USER_ID = #{userId}
	</select>
	<!--根据条件查询用户列表-->
	<select id="getUserById" parameterType="java.lang.Long" resultType="user">
		SELECT
		<include refid="all_user_columns"></include>
		FROM PM_SYS_USER
		WHERE USER_ID =#{userId}
	</select>
	<!--修改用户密码-->
	<update id="updateUserPsd">
		UPDATE PM_SYS_USER SET PASSWORD =#{1} WHERE USER_ID=#{0}
	</update>
	<!--根据条件查询用户列表-->
	<select id="getUserVoList" parameterType="user" resultType="userVo">
		SELECT A.USER_ID,A.DEPT_ID,A.LOGIN_NAME,A.PASSWORD,
   		A.USER_NO,A.USER_NAME,A.EMAIL,A.PHONE,A.MOBILE,
   		A.UPDATE_BY,A.UPDATE_DATE,A.REMARKS,B.NAME DEPT_NAME
   		FROM PM_SYS_USER A ,PM_SYS_DEPT B
		<where>
			AND A.DEPT_ID=B.ID
			<if test="userName!=null">
				AND A.USER_NAME LIKE '%${userName}%'
			</if>
			<if test="deptId!=null">
				AND A.DEPT_ID=#{deptId}
			</if>
		</where>
	</select>
	<!--根据条件查询用户列表-->
	<select id="getUserInfo" parameterType="java.lang.Long" resultType="userVo">
		SELECT A.USER_ID,A.DEPT_ID,A.LOGIN_NAME,A.PASSWORD,
   		 A.USER_NO,A.USER_NAME,A.EMAIL,A.PHONE,A.MOBILE,
   		 A.UPDATE_BY,A.UPDATE_DATE,A.REMARKS,B.NAME DEPT_NAME
   		 FROM PM_SYS_USER A ,PM_SYS_DEPT B
   		 WHERE A.USER_ID =#{userId} AND A.DEPT_ID=B.ID
	</select>
	<!--批量添加用户角色对应表-->
	<insert id="addUserRoleBatch">
		INSERT INTO PM_SYS_USER_ROLE(USER_ID,ROLE_ID)
		VALUES
		<foreach collection="list" item="userToRole" index="index" separator=",">
			(#{userToRole.userId},#{userToRole.roleId})
		</foreach>
	</insert>
	<!--增加用户-->
	<insert id="addUser" parameterType="user">
		<selectKey keyProperty="userId" resultType="long" order="AFTER">
		  SELECT LAST_INSERT_ID() as userId
		</selectKey>
		INSERT INTO PM_SYS_USER(DEPT_ID,LOGIN_NAME,PASSWORD,
		USER_NO,USER_NAME,EMAIL,PHONE,MOBILE,
		UPDATE_BY,UPDATE_DATE,REMARKS)
		VALUES(#{deptId},#{loginName},#{password},#{userNo},
		#{userName},#{email},#{phone},#{mobile},
		#{updateBy},#{updateDate},#{remarks})
	</insert>
	<!--删除用户关系-->
	<delete id="delUser" parameterType="java.lang.Long">
		 DELETE FROM PM_SYS_USER WHERE USER_ID=#{userId}
	</delete>
	<!--删除用户关系-->
	<delete id="delUserRoleByUserId" parameterType="java.lang.Long">
		 DELETE FROM PM_SYS_USER_ROLE WHERE USER_ID=#{userId}
	</delete>

	<update id="updateUser" parameterType="user">
		UPDATE PM_SYS_USER
		<set>
			<if test="deptId!=null">
				DEPT_ID=#{deptId},
			</if>
			<if test="loginName!=null">
				LOGIN_NAME=#{loginName},
			</if>
			<if test="userNo!=null">
				USER_NO = #{userNo},
			</if>
			<if test="userName != null">
				USER_NAME = #{userName},
			</if>
			<if test="email != null">
				EMAIL = #{email},
			</if>
			<if test="phone != null">
				PHONE = #{phone},
			</if>
			<if test="mobile != null">
				MOBILE = #{mobile},
			</if>
			<if test="updateBy != null">
				UPDATE_BY = #{updateBy},
			</if>
			<if test="updateDate != null">
				UPDATE_DATE = #{updateDate},
			</if>
			<if test="remarks != null">
				REMARKS = #{remarks},
			</if>

		</set>
		WHERE USER_ID=#{userId}
	</update>


	 
</mapper>